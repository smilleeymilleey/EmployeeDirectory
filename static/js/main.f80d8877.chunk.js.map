{"version":3,"sources":["api.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["a","fetch","then","response","json","getEmployees","Table","data","useState","users","setUsers","nameSort","setNameSort","genderFilter","setGenderFilter","compareAscending","b","userA","name","first","toUpperCase","userB","comparison","compareDescending","useEffect","sort","results","filter","user","gender","console","log","onClick","style","width","map","last","email","App","setData","res","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAEA,sBAAAA,EAAA,sEACeC,MAAO,yCACjBC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAFhC,oF,sBAMeC,M,yDC0HAC,MA9Hf,YAA0B,IAATC,EAAQ,EAARA,KACb,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEA,SAASC,EAAiBf,EAAGgB,GACzB,IAAMC,EAAQjB,EAAEkB,KAAKC,MAAMC,cACrBC,EAAQL,EAAEE,KAAKC,MAAMC,cAEvBE,EAAa,EAMjB,OALIL,EAAQI,EACVC,EAAa,EACJL,EAAQI,IACjBC,GAAc,GAETA,EAGX,SAASC,EAAkBvB,EAAGgB,GAC1B,IAAMC,EAAQjB,EAAEkB,KAAKC,MAAMC,cACrBC,EAAQL,EAAEE,KAAKC,MAAMC,cAEvBE,EAAa,EAMjB,OALIL,EAAQI,EACVC,EAAa,EACJL,EAAQI,IACjBC,GAAc,GAETA,EAgEX,OA7DAE,qBAAU,WACDjB,IAEAI,EAEmB,cAAbA,EACPD,EAAS,YAAID,GAAOgB,KAAKV,IACL,eAAbJ,GACPD,EAAS,YAAID,GAAOgB,KAAKF,IAJzBb,EAASH,EAAKmB,YAMnB,CAACf,IAEJa,qBAAU,WACFjB,GACAG,EAASH,EAAKmB,WAEnB,CAACnB,IAeJiB,qBAAU,WACDjB,IAEAM,EAEuB,WAAjBA,EACPH,EAAS,YAAIH,EAAKmB,SAASC,QAAO,SAAAC,GAAI,MAAoB,WAAhBA,EAAKC,WACvB,SAAjBhB,GACPH,EAAS,YAAIH,EAAKmB,SAASC,QAAO,SAAAC,GAAI,MAAoB,SAAhBA,EAAKC,WAJ/CnB,EAASH,EAAKmB,SAMlBI,QAAQC,IAAIlB,MACb,CAACA,IAEJW,qBAAU,WACFjB,GACAG,EAASH,EAAKmB,WAEnB,CAACnB,IAcA,gCACI,yEACA,wBAAQyB,QAZhB,WACSnB,EAEuB,WAAjBA,EACPC,EAAgB,QACQ,SAAjBD,GACPC,EAAgB,MAJhBA,EAAgB,WAUhB,2BACA,wBAAOmB,MAAO,CAACC,MAAO,QAAtB,UACI,+BACI,oBAAIF,QAhDpB,WACSrB,EAEmB,cAAbA,EACPC,EAAY,cACQ,eAAbD,GACPC,EAAY,MAJZA,EAAY,cA8CJ,kBAGA,wCAGA,0CAIHH,EAAM0B,KAAI,SAAAP,GAAI,OACX,+BACI,6BACKA,EAAKV,KAAKC,MAAQ,IAAMS,EAAKV,KAAKkB,OAEvC,6BACKR,EAAKC,SAEV,6BACKD,EAAKS,qBCtGnBC,MAdf,WACE,MAAwB9B,mBAAS,MAAjC,mBAAOD,EAAP,KAAagC,EAAb,KAMA,OAJAf,qBAAU,WACRnB,IAAeH,MAAK,SAAAsC,GAAG,OAAID,EAAQC,QAClC,IAGD,qBAAKC,UAAU,OAAf,SACE,cAAC,EAAD,CAAOlC,KAAMA,OCFJmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f80d8877.chunk.js","sourcesContent":["\r\n\r\nasync function getEmployees() {\r\n  return await fetch ('https://randomuser.me/api/?results=10') \r\n    .then (response => response.json())\r\n  \r\n}\r\n\r\nexport default getEmployees;","import React, { useState, useEffect } from 'react';\r\n\r\n// bootstrap table \r\n\r\nfunction Table({ data }) {\r\n    const [users, setUsers] = useState([]);\r\n    const [nameSort, setNameSort] = useState(null);\r\n    const [genderFilter, setGenderFilter] = useState(null);\r\n\r\n    function compareAscending(a, b) {\r\n        const userA = a.name.first.toUpperCase();\r\n        const userB = b.name.first.toUpperCase();\r\n      \r\n        let comparison = 0;\r\n        if (userA > userB) {\r\n          comparison = 1;\r\n        } else if (userA < userB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    function compareDescending(a, b) {\r\n        const userA = a.name.first.toUpperCase();\r\n        const userB = b.name.first.toUpperCase();\r\n      \r\n        let comparison = 0;\r\n        if (userA < userB) {\r\n          comparison = 1;\r\n        } else if (userA > userB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data) { return }\r\n\r\n        if (!nameSort) {\r\n            setUsers(data.results);\r\n        } else if (nameSort === \"ascending\") {\r\n            setUsers([...users].sort(compareAscending))\r\n        } else if (nameSort === \"descending\") {\r\n            setUsers([...users].sort(compareDescending))\r\n        }\r\n    }, [nameSort]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setUsers(data.results);\r\n        }\r\n    }, [data]);\r\n\r\n    \r\n    function handleNameSort() {\r\n        if (!nameSort) {\r\n            setNameSort(\"ascending\");\r\n        } else if (nameSort === \"ascending\") {\r\n            setNameSort(\"descending\");\r\n        } else if (nameSort === \"descending\") {\r\n            setNameSort(null)\r\n        }\r\n    }\r\n\r\n    // gender filter\r\n \r\n    useEffect(() => {\r\n        if (!data) { return }\r\n\r\n        if (!genderFilter) {\r\n            setUsers(data.results);\r\n        } else if (genderFilter === \"female\") {\r\n            setUsers([...data.results].filter(user => user.gender === \"female\"))\r\n        } else if (genderFilter === \"male\") {\r\n            setUsers([...data.results].filter(user => user.gender === \"male\"))\r\n        }\r\n        console.log(genderFilter)\r\n    }, [genderFilter]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setUsers(data.results);\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    function filterGender() {\r\n        if (!genderFilter) {\r\n            setGenderFilter(\"female\");\r\n        } else if (genderFilter === \"female\") {\r\n            setGenderFilter(\"male\");\r\n        } else if (genderFilter === \"male\") {\r\n            setGenderFilter(null)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>*Click on \"Name\" to sort Alphabetically*</p>\r\n            <button onClick={filterGender}>Filter Gender</button>\r\n            <table style={{width: \"100%\"}}>\r\n                <tr>\r\n                    <th onClick={handleNameSort}>\r\n                        Name\r\n                    </th>\r\n                    <th>\r\n                        Gender\r\n                    </th>\r\n                    <th>\r\n                        Email\r\n                    </th>\r\n                </tr>\r\n                {users.map(user => \r\n                    <tr>\r\n                        <td>\r\n                            {user.name.first + \" \" + user.name.last}\r\n                        </td>\r\n                        <td>\r\n                            {user.gender}\r\n                        </td>\r\n                        <td>\r\n                            {user.email}\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport getEmployees from \"./api.js\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  const [data, setData] = useState(null) \n\n  useEffect(() => {\n    getEmployees().then(res => setData(res))\n  }, [])\n  \n  return (\n    <div className=\"home\">\n      <Table data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}